import { HttpClient } from '@angular/common/http';
import { Component, Input, OnInit } from '@angular/core';

@Component({
  selector: 'app-chart',
  templateUrl: './chart.component.html',
  styleUrls: ['./chart.component.css']
})
export class ChartComponent implements OnInit {
  @Input() name: any
  width: number = 700;
  height: number = 300;
  fitContainer: boolean = false;

  view: [number, number] = [1100, 500];
  // options for the chart
  showXAxis = true;
  showYAxis = true;
  gradient = false;
  showLegend = true;
  showXAxisLabel = true;
  showYAxisLabel = true;
  showGridLines = true;
  timeline = true;
  showDataLabel = true;
  doughnut = true;
  colorScheme1 = "nightLights";
  colorScheme2 = "picnic";
  colorScheme3 = "horizon";
  colorScheme4 = "forest";
  colorScheme5 = "flame";
  @Input() chartType: any;

  age = [63, 37, 41, 56, 57, 57, 56, 44, 52, 57, 54, 48, 49, 64, 58, 50, 58, 66, 43, 69, 59, 44, 42, 61, 40, 71, 59, 51, 65, 53, 41, 65, 44, 54, 51, 46, 54, 54, 65, 65, 51, 48, 45, 53, 39, 52, 44, 47, 53, 53, 51, 66, 62, 44, 63, 52, 48, 45, 34, 57, 71, 54, 52, 41, 58, 35, 51, 45, 44, 62, 54, 51, 29, 51, 43, 55, 51, 59, 52, 58, 41, 45, 60, 52, 42, 67, 68, 46, 54, 58, 48, 57, 52, 54, 45, 53, 62, 52, 43, 53, 42, 59, 63, 42, 50, 68, 69, 45, 50, 50, 64, 57, 64, 43, 55, 37, 41, 56, 46, 46, 64, 59, 41, 54, 39, 34, 47, 67, 52, 74, 54, 49, 42, 41, 41, 49, 60, 62, 57, 64, 51, 43, 42, 67, 76, 70, 44, 60, 44, 42, 66, 71, 64, 66, 39, 58, 47, 35, 58, 56, 56, 55, 41, 38, 38, 67, 67, 62, 63, 53, 56, 48, 58, 58, 60, 40, 60, 64, 43, 57, 55, 65, 61, 58, 50, 44, 60, 54, 50, 41, 51, 58, 54, 60, 60, 59, 46, 67, 62, 65, 44, 60, 58, 68, 62, 52, 59, 60, 49, 59, 57, 61, 39, 61, 56, 43, 62, 63, 65, 48, 63, 55, 65, 56, 54, 70, 62, 35, 59, 64, 47, 57, 55, 64, 70, 51, 58, 60, 77, 35, 70, 59, 64, 57, 56, 48, 56, 66, 54, 69, 51, 43, 62, 67, 59, 45, 58, 50, 62, 38, 66, 52, 53, 63, 54, 66, 55, 49, 54, 56, 46, 61, 67, 58, 47, 52, 58, 57, 58, 61, 42, 52, 59, 40, 61, 46, 59, 57, 57, 55, 61, 58, 58, 67, 44, 63, 63, 59, 57, 45, 68, 57, 57]
  target = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  sex = [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1]
  cp = [1, 3, 1, 0, 1, 0, 0, 2, 2, 2, 2, 3, 2, 2, 2, 0, 3, 0, 0, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 3, 2, 1, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 0, 2, 1, 0, 2, 1, 0, 0, 1, 1, 0, 2, 2, 2, 2, 1, 0, 0, 2, 0, 2, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 2, 1, 1, 3, 1, 3, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 2, 2, 2, 1, 2, 2, 1, 2, 2, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 3, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 1, 3, 2, 2, 2, 0, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 3, 0, 0, 0, 0, 3, 0, 3, 2, 3, 0, 2, 2, 3, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 3, 2, 1, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 3, 2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 3, 3, 0, 0, 2, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 3, 3, 2, 1, 0, 0, 2, 1, 2, 0, 1, 2, 0]
  fbs = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
  slope = [2, 2, 2, 2, 2, 1, 2, 0, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 0, 1, 2, 1, 2, 1, 1, 1, 1, 0, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 2, 0, 1, 2, 0, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 0, 1, 1, 1, 2, 1, 1, 2, 0, 1, 1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 0, 1, 1, 2, 2, 0, 2, 0, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 0, 1, 0, 1, 1, 1, 1, 0, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 0, 1, 2, 2, 2, 2, 1, 2, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 0, 1, 1, 2, 2, 1, 2, 1, 2]
  pair1: any[];
  pair2: any[];
  pair3: any[];
  pair4: any[];
  pair5: any[];
  showLabels = true;

  constructor(private http: HttpClient) {
    this.pair1 = [];
    this.pair2 = [];
    this.pair3 = [];
    this.pair4 = [];
    this.pair5 = [];
  }

  ngOnInit() {
    this.populateAge();
    this.populateSex();
    this.populateCp();
    this.populateFbs();
    this.populateSlope();
  }

  populateAge() {
    for (var i = 2; i < 8; i++) {
      this.pair1.push({
        "min": i * 10 + 1,
        "max": (i + 1) * 10,
        "name": (i * 10 + 1).toString() + " - " + ((i + 1) * 10).toString(),
        "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
      });
    }
    this.age.forEach((element, i) => {
      this.pair1.forEach((e, index) => {
        if (element <= e.max && element >= e.min) {
          console.log("inside else")
          if (this.target[i] === 0) {
            this.pair1[index].series[1].value++;
          }
          else this.pair1[index].series[0].value++;
        }

      });

    });
    console.log("pair1", this.pair1);
  }

  populateSex() {
    this.pair2.push({
      "name": "Female",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Male",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    });

    this.sex.forEach((element, i) => {
      this.pair2.forEach((e, index) => {
        if (this.target[i] === 0) {
          this.pair2[element].series[1].value++;
        }
        else this.pair2[element].series[0].value++;
      }
      );

    });

    console.log("pair2", this.pair2);
  }

  populateCp() {
    this.pair3.push({
      "name": "Typical Angina",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Atypical Angina",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Non Typical Angina",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Asymptomatic",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    });

    this.cp.forEach((element, i) => {
      this.pair3.forEach((e, index) => {
        if (this.target[i] === 0) {
          this.pair3[element].series[1].value++;
        }
        else this.pair3[element].series[0].value++;
      }
      );

    });
  }

  populateFbs() {
    this.pair4.push({
      "name": "False",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "True",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    });

    this.fbs.forEach((element, i) => {
      this.pair4.forEach((e, index) => {
        if (this.target[i] === 0) {
          this.pair4[element].series[1].value++;
        }
        else this.pair4[element].series[0].value++;
      }
      );

    });
  }

  populateSlope() {
    this.pair5.push({
      "name": "Upsloping",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Flat",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    }, {
      "name": "Downslopong",
      "series": [{ "name": "Present", "value": 0 }, { "name": "Absent", "value": 0 }]
    });

    this.slope.forEach((element, i) => {
      this.pair5.forEach((e, index) => {
        if (this.target[i] === 0) {
          this.pair5[element].series[1].value++;
        }
        else this.pair5[element].series[0].value++;
      }
      );

    });
  }

}

